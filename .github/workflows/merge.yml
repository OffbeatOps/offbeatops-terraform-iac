name: Merge Workflow for Terraform Plan and Apply

on:
  push:
    branches:
      - main

jobs:
  dev-us-west-1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS for Dev US West 1
        run: |
          echo "Configuring AWS for Dev US West 1"
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_DEV }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}" >> $GITHUB_ENV
          echo "AWS_REGION=us-west-1" >> $GITHUB_ENV

      - name: Run Terraform Plan for Dev US West 1
        working-directory: aws/dev/us-west-1
        run: |
          terraform init
          terraform plan

      - name: Run Terraform Apply for Dev US West 1
        working-directory: aws/dev/us-west-1
        run: |
          terraform apply -auto-approve

  dev-us-east-1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS for Dev US East 1
        run: |
          echo "Configuring AWS for Dev US East 1"
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_DEV }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}" >> $GITHUB_ENV
          echo "AWS_REGION=us-east-1" >> $GITHUB_ENV

      - name: Run Terraform Plan for Dev US East 1
        working-directory: aws/dev/us-east-1
        run: |
          terraform init
          terraform plan

      - name: Run Terraform Apply for Dev US East 1
        working-directory: aws/dev/us-east-1
        run: |
          terraform apply -auto-approve

  dev-global:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS for Dev Global
        run: |
          echo "Configuring AWS for Dev Global"
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_DEV }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}" >> $GITHUB_ENV
          echo "AWS_REGION=us-east-1" >> $GITHUB_ENV

      - name: Run Terraform Plan for Dev Global
        working-directory: aws/dev/global
        run: |
          terraform init
          terraform plan

      - name: Run Terraform Apply for Dev Global
        working-directory: aws/dev/global
        run: |
          terraform apply -auto-approve

  qa-us-west-1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS for QA US West 1
        run: |
          echo "Configuring AWS for QA US West 1"
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_QA }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_QA }}" >> $GITHUB_ENV
          echo "AWS_REGION=us-west-1" >> $GITHUB_ENV

      - name: Run Terraform Plan for QA US West 1
        working-directory: aws/qa/us-west-1
        run: |
          terraform init
          terraform plan

      - name: Run Terraform Apply for QA US West 1
        working-directory: aws/qa/us-west-1
        run: |
          terraform apply -auto-approve

  qa-us-east-1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS for QA US East 1
        run: |
          echo "Configuring AWS for QA US East 1"
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_QA }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_QA }}" >> $GITHUB_ENV
          echo "AWS_REGION=us-east-1" >> $GITHUB_ENV

      - name: Run Terraform Plan for QA US East 1
        working-directory: aws/qa/us-east-1
        run: |
          terraform init
          terraform plan

      - name: Run Terraform Apply for QA US East 1
        working-directory: aws/qa/us-east-1
        run: |
          terraform apply -auto-approve

  prod-us-west-1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS for Prod US West 1
        run: |
          echo "Configuring AWS for Prod US West 1"
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_PROD }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}" >> $GITHUB_ENV
          echo "AWS_REGION=us-west-1" >> $GITHUB_ENV

      - name: Run Terraform Plan for Prod US West 1
        working-directory: aws/prod/us-west-1
        run: |
          terraform init
          terraform plan

      - name: Run Terraform Apply for Prod US West 1
        working-directory: aws/prod/us-west-1
        run: |
          terraform apply -auto-approve

  prod-us-east-1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS for Prod US East 1
        run: |
          echo "Configuring AWS for Prod US East 1"
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_PROD }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}" >> $GITHUB_ENV
          echo "AWS_REGION=us-east-1" >> $GITHUB_ENV

      - name: Run Terraform Plan for Prod US East 1
        working-directory: aws/prod/us-east-1
        run: |
          terraform init
          terraform plan

      - name: Run Terraform Apply for Prod US East 1
        working-directory: aws/prod/us-east-1
        run: |
          terraform apply -auto-approve

  shared-services:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS for Shared Services
        run: |
          echo "Configuring AWS for Shared Services"
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_SHARED_SERVICES }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_SHARED_SERVICES }}" >> $GITHUB_ENV
          echo "AWS_REGION=us-west-1" >> $GITHUB_ENV

      - name: Run Terraform Plan for Shared Services
        working-directory: aws/shared-services
        run: |
          terraform init
          terraform plan

      - name: Run Terraform Apply for Shared Services
        working-directory: aws/shared-services
        run: |
          terraform apply -auto-approve
